class Solution {
    public int minimizedMaximum(int n, int[] quantities) {
        int max = 0;
        for(int i=0; i<quantities.length; i++){
            max = Math.max(max, quantities[i]);
        }
        int start = 1;
        int end = max;
        int ans = 0;
        while(start<=end){
            int mid = start +(end-start)/2 ;
            if(isPossible(n, quantities, mid)){
                ans = mid;
                end = mid-1;
                }
            else{
                start = mid+1;
            }            
        }
        return ans;
    }
public boolean isPossible(int n, int[] quantities, int max_allowed_distri){
    int shops=0;
    for(int i=0; i<quantities.length; i++){
        shops += quantities[i]/max_allowed_distri; 
        if(quantities[i]%max_allowed_distri!=0){
            shops++;
        }
    }
    return shops<=n; 
}
}
