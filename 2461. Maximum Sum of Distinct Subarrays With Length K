class Solution {
    public long maximumSubarraySum(int[] nums, int k) {
        long sum = 0, max = 0;
        int n  = nums.length;
        
        Map<Integer,Integer> map = new HashMap();
        if(n == 1)
            return nums[0];
        
        for(int i=0; i<n; i++){
		
            map.put(nums[i], map.getOrDefault(nums[i],0) + 1);
            sum += nums[i];
			
            if(i>=k){
                map.put(nums[i-k],map.get(nums[i-k]) - 1);
                sum -= nums[i-k];
                
                if(map.get(nums[i-k]) == 0)
                    map.remove(nums[i-k]);
            }
			
            if(map.size() == k)
                max = Math.max(sum,max);
        }
        return max;
    }
}
