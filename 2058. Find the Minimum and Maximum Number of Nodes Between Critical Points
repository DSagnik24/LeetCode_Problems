class Solution {
    public int[] nodesBetweenCriticalPoints(ListNode head) {
        if (head == null || head.next == null || head.next.next == null) { 
            return new int[]{-1,-1};
        }

        ListNode prev = head;
        ListNode curr = head.next;
        ListNode next = curr.next;
        int first = -1;
        int last = -1;
        int minDiff = (int) Math.pow(10,5);
        int index = 1;
        while (next != null) {
            if ((curr.val > prev.val && curr.val > next.val) || (curr.val < prev.val && curr.val < next.val)) {
                if (first == -1){
                    first = index;
                } else {
                    minDiff = Math.min(minDiff, index - last);
                }
                last = index;
            }
            prev = curr;
            curr = next;
            next = next.next;
            index++;
        }
        if (first == last) {
            return  new int[]{-1,-1};
        }
        return new int[]{minDiff == (int) Math.pow(10,5)? -1 : minDiff, last - first};
        
    }
}
